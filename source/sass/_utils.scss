@import './_config.scss';

$sm: 600px;
$md: 1023px;
$lg: 1440px;
$xl: 1800px;

@mixin create-columns($number) {
  width: calc(100% / #{$number});
  @content;
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

@mixin flex($justify-content, $align-center) {
  display: flex;
  justify-content: $justify-content;
  @if $align-center {
    align-items: center;
  }
}

@mixin center {
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
}

@mixin vertical-center {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin opacity-hover {
  opacity: 1;
  transition: opacity $anim-speed ease-in-out;
  &:hover {
    opacity: .8;
  }
}

@mixin show-on-active() {
  opacity: 0;
  transition: opacity $anim-speed ease-in-out;
  visibility: hidden;
  &.active {
    opacity: 1;
    visibility: visible;
  }
}


/*************
    MEDIA QUERIES
*************/

@mixin respond-up($size) {
  @if $size == xs {
    @media only screen and (min-width: $size-xs) {
      @content;
    }
  } @else if $size == sm {
    @media only screen and (min-width: $size-sm) {
      @content;
    }
  } @else if $size == md {
    @media only screen and (min-width: $size-md) {
      @content;
    }
  } @else if $size == bootlg {
    @media only screen and (min-width: $size-boot-lg) {
      @content;
    }
  } @else if $size == lg {
    @media only screen and (min-width: $size-lg) {
      @content;
    }
  } @else if $size == xl {
    @media only screen and (min-width: $size-xl) {
      @content;
    }
  } @else {
    @media only screen and (min-width: $size) {
      @content;
    }
  }
}

@mixin respond-down($size) {
  @if $size == xs {
    @media only screen and (max-width: $size-xs) {
      @content;
    }
  } @else if $size == sm {
    @media only screen and (max-width: ($size-sm - 1px)) {
      @content;
    }
  } @else if $size == md {
    @media only screen and (max-width: ($size-md - 1px)) {
      @content;
    }
  } @else if $size == bootlg {
    @media only screen and (max-width: ($size-boot-lg - 1px)) {
      @content;
    }
  } @else if $size == lg {
    @media only screen and (max-width: ($size-lg - 1px)) {
      @content;
    }
  } @else if $size == xl {
    @media only screen and (max-width: ($size-xl - 1px)) {
      @content;
    }
  } @else {
    @media only screen and (max-width: $size) {
      @content;
    }
  }
}

/*************
    IMAGES
*************/
@mixin keep-ratio($ratio) {
  &:before {
    content: '';
    display: block;
    padding-top: $ratio;
    width: 100%;
  }
}

@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($y / $x) * 100 + '%');

  @if $pseudo {
    &:before {
      padding-top: $padding;
      width: 100%;

      @include pseudo($pos: relative);
    }
  } @else {
    padding-top: $padding;
  }
}

@mixin imgRetina($image, $extension, $contain: false, $center: true) {
  background: url('/static/images/')$image+'.'+$extension;
  background-repeat: no-repeat;
  background-size: cover;;

  @if $contain {
    background-size: contain;
  }

  @if $center {
    background-position: center center;
  }

  @media screen and (min-device-pixel-ratio: 2),
  screen and (min-device-pixel-ratio: 2/1),
  screen and (min-device-pixel-ratio: 2),
  screen and (min-resolution: 192dpi),
  screen and (min-resolution: 2dppx) {
    background: url('/static/images/')$image+'_2x'+'.'+$extension;
    background-repeat: no-repeat;
    background-size: cover;
    background-size: cover;;

    @if $contain {
      background-size: contain;
    }

    @if $center {
      background-position: center center;
    }

    @if $contain {
      background-size: contain;
    }

    @if $center {
      background-position: center center;
    }
  }
  @content;
}

@mixin picture-centered($useHeight: false) {
  align-items: center;
  display: flex;
  justify-content: center;
  position: relative;
  width: 100%;

  img {
    @if $useHeight {
      height: 100%;
      min-height: 100%;
      width: auto;
    } @else {
      width: 100%;
    }
  }
}

@mixin box-shadow() {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .24), 0 0 2px 0 rgba(0, 0, 0, .12);
}

@mixin cta-btn() {
  background-color: $google-blue;
  border: solid 1px transparent;
  border-radius: 2px;
  color: white;
  cursor: pointer;
  font-family: $font-family;
  font-size: $fs-p;
  font-stretch: normal;
  font-style: normal;
  font-weight: 500;
  letter-spacing: .5px;
  overflow: hidden;
  position: relative;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  transition: opacity $anim-speed ease-in-sine;

  @include box-shadow();

  &:hover {
    opacity: .8;
  }
}

%bg-contain {
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
}

@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
     -moz-transform: rotate($degrees);
      -ms-transform: rotate($degrees);
       -o-transform: rotate($degrees);
          transform: rotate($degrees);
}

@mixin calc-hero-height() {
  height: calc(100vh - #{$header-height-s});
  min-height: 550px;

  @include respond-up($md) {
    height: calc(100vh - #{$header-height});
  }
}
